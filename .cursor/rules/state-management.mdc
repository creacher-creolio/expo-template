---
description: react: state management
globs:
alwaysApply: false
---
- Use Legend State as the primary state management solution for global state
- Use React's useState for simple component-local state only
- Implement React Query (TanStack Query) for server state management if using a server--otherwise, Supabase
- Keep API request logic and data transformation separate from UI components
- Create custom hooks to encapsulate and reuse state logic
- Follow atomic pattern for state composition and organization
- Use optimistic updates for better UX during async operations
- Avoid prop drilling by leveraging Legend State observables
- [legend-state.mdc](mdc:.cursor/rules/legend-state.mdc)
